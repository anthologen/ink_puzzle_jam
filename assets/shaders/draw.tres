[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "percent"

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[resource]
code = "shader_type canvas_item;
uniform float percent;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out6p0 = _tex_read.rgb;
		n_out6p1 = _tex_read.a;
	}

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarUniform:2
	float n_out2p0 = percent;

// ScalarOp:3
	float n_out3p0 = step(n_out5p0, n_out2p0);

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -314.901, 222.492 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1860, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 520, 420 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 1420, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 360, -120 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 880, 140 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 1300, -140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 1, 4, 0, 5, 0, 3, 0, 0, 1, 5, 0, 3, 0, 4, 0, 6, 0, 6, 0, 0, 0 )
